{
  "version": 1,
  "rules": [
    {
      "name": "go-error-handling",
      "description": "Rules for consistent error handling in Go code",
      "patterns": {
        "avoid": [
          {
            "pattern": "if err := .*; err != nil {",
            "message": "Avoid inline error checking. Separate the operation from its error check for better readability and debugging."
          },
          {
            "pattern": "if _, err := .*; err != nil {",
            "message": "Avoid inline error checking with discarded values. Separate the operation from its error check."
          },
          {
            "pattern": ", _ := .*\\(.*\\)",
            "message": "Avoid ignoring errors. Either handle the error or explicitly document why it's safe to ignore."
          }
        ],
        "prefer": [
          {
            "pattern": "err = .*\nif err != nil {",
            "message": "Separate error checking from the operation for better readability and debugging."
          }
        ]
      },
      "examples": {
        "incorrect": [
          "if err := someFunction(); err != nil {",
          "if _, err := someFunction(); err != nil {",
          "value, _ := someFunction()"
        ],
        "correct": [
          "err = someFunction()\nif err != nil {",
          "value, err := someFunction()\nif err != nil {"
        ]
      },
      "documentation": {
        "title": "Go Error Handling Best Practices",
        "description": "Go error handling should be explicit and clear. Separating operations from their error checks improves code readability, debugging, and maintainability.",
        "references": [
          {
            "title": "Effective Go - Error Handling",
            "url": "https://golang.org/doc/effective_go#errors"
          }
        ]
      }
    },
    {
      "name": "nix-flake-devshell",
      "description": "Guidelines for running commands in a Nix flake environment with devshell",
      "patterns": {
        "avoid": [
          {
            "pattern": "npm (install|ci)",
            "message": "Avoid direct package manager commands. Use the Nix devshell which provides all dependencies."
          },
          {
            "pattern": "(pip|pip3) install",
            "message": "Avoid direct package installation. Use the Nix devshell which provides all dependencies."
          },
          {
            "pattern": "go (test|run|build|mod|generate)",
            "message": "Avoid running Go commands directly. Run them within the Nix devshell environment."
          },
          {
            "pattern": "(make|cmake|cargo|yarn|pnpm)",
            "message": "Run build tools within the Nix devshell environment for consistent dependencies."
          }
        ],
        "prefer": [
          {
            "pattern": "nix develop",
            "message": "Use 'nix develop' to enter the development environment defined in the flake."
          },
          {
            "pattern": "nix develop -c",
            "message": "Use 'nix develop -c <command>' to run commands within the Nix devshell context."
          }
        ]
      },
      "examples": {
        "incorrect": [
          "npm install",
          "pip install -r requirements.txt",
          "go test ./...",
          "go generate",
          "make build"
        ],
        "correct": [
          "nix develop",
          "nix develop -c go test ./...",
          "nix develop -c go generate",
          "nix develop -c make build"
        ]
      },
      "documentation": {
        "title": "Working with Nix Flakes and Devshells",
        "description": "This codebase uses Nix flakes with a devshell to provide a consistent development environment. Always run ALL commands within this context, especially Go testing and code generation which require specific tool versions.",
        "references": [
          {
            "title": "Nix Flakes Documentation",
            "url": "https://nixos.wiki/wiki/Flakes"
          }
        ]
      }
    }
  ]
} 